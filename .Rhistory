Library('ggplot2')
library(ggplot2)
library(scales)
library(gridExtra)
df <- read.csv('MM_Cleaned_2.csv')
View(df)
library(ggplot2)
library(scales)
library(gridExtra)
df <- read.csv('MM_Cleaned_2.csv')
View(df)
View(df)
library(ggplot2)
library(scales)
library(gridExtra)
df <- read.csv('trian_data.csv')
library(ggplot2)
library(scales)
library(gridExtra)
df <- read.csv('trian_data_diff.csv')
library(ggplot2)
library(scales)
library(gridExtra)
df <- read.csv('train_data_diff.csv')
View(df)
View(df)
View(df)
View(df)
View(df)
View(df)
###TEST PLOT PPG
ggplot(aes(x = PPG_Diff, y = Result), data = df) +
geom_bar(stat = 'identity', width = .75) +
labs( title = 'PPG_differential to Results') +
ylab('Results (1= win)') +
xlab('PPG_Differential') +
theme(axis.title = element_text(color="Black", face="bold", size=22)) +
theme(plot.title = element_text(color="black", size=32, hjust=0))
df_wins <- df[Result] == 1
df_wins <- df[df[Result] == 1]
View(df)
df_wins <- df[df$Result == 1]
df <- read.csv('train_data_diff.csv')
df_wins <- subset(df, Result == 1)
View(df_wins)
df_losses <- subset(df, Result == 0)
ggplot(aes(x = PPG_Diff), data = df_wins) +
geom_histogram(stat = 'identity', width = .75) +
labs( title = 'PPG_differential to Results') +
ylab('Results (1= win)') +
xlab('PPG_Differential') +
theme(axis.title = element_text(color="Black", face="bold", size=22)) +
theme(plot.title = element_text(color="black", size=32, hjust=0))
###TEST PLOT PPG WINS
ggplot(aes(x = PPG_Diff, y = Result), data = df_wins) +
geom_bar(stat = 'identity', width = .75) +
labs( title = 'PPG_differential to Results') +
ylab('Results (1= win)') +
xlab('PPG_Differential') +
theme(axis.title = element_text(color="Black", face="bold", size=22)) +
theme(plot.title = element_text(color="black", size=32, hjust=0))
ggplot(aes(x = PPG_Diff, y = Result), data = df_losses) +
geom_bar(stat = 'identity', width = .75) +
labs( title = 'PPG_differential to Results') +
ylab('Wins') +
xlab('PPG_Differential') +
theme(axis.title = element_text(color="Black", face="bold", size=22)) +
theme(plot.title = element_text(color="black", size=32, hjust=0))
###WINS
g1 <-ggplot(aes(x = PPG_Diff, y = Result), data = df_wins) +
geom_bar(stat = 'identity', width = .75) +
labs( title = 'PPG_differential to Results') +
ylab('Wins') +
xlab('PPG_Differential') +
theme(axis.title = element_text(color="Black", face="bold", size=22)) +
theme(plot.title = element_text(color="black", size=32, hjust=0))
###osses
g2 <-ggplot(aes(x = PPG_Diff, y = Result), data = df_losses) +
geom_bar(stat = 'identity', width = .75) +
labs( title = 'PPG_differential to Results') +
ylab('Wins') +
xlab('PPG_Differential') +
theme(axis.title = element_text(color="Black", face="bold", size=22)) +
theme(plot.title = element_text(color="black", size=32, hjust=0))
grid.arrange(g1, g2, nrow = 2)
View(df_losses)
ggplot(aes(x = PPG_Diff, y = Result), data = df_losses) +
geom_bar(stat = 'identity', width = .75) +
labs( title = 'PPG_differential to Results') +
ylab('Losses') +
xlab('PPG_Differential') +
theme(axis.title = element_text(color="Black", face="bold", size=22)) +
theme(plot.title = element_text(color="black", size=32, hjust=0))
<-ggplot(aes(x = PPG_Diff, y = Result), data = df_wins) +
geom_bar(stat = 'identity', width = .75) +
labs( title = 'PPG_differential to Wins') +
ylab('Wins') +
xlab('PPG_Differential')
ggplot(aes(x = PPG_Diff, y = Result), data = df_wins) +
geom_bar(stat = 'identity', width = .75) +
labs( title = 'PPG_differential to Wins') +
ylab('Wins') +
xlab('PPG_Differential')
ggplot(aes(x = PPG_Diff, y = Result), data = df_losses) +
geom_bar(stat = 'identity', width = .75) +
labs( title = 'PPG_differential to Losses') +
ylab('Losses') +
xlab('PPG_Differential')
ggplot(aes(x = PPG_Diff, y = Result), data = df_losses) +
geom_bar() +
labs( title = 'PPG_differential to Losses') +
ylab('Losses') +
xlab('PPG_Differential')
ggplot(aes(x = PPG_Diff, y = Result + 1), data = df_losses) +
geom_bar(stat = 'identity', width = .75) +
labs( title = 'PPG_differential to Losses') +
ylab('Losses') +
xlab('PPG_Differential')
g1 <-ggplot(aes(x = PPG_Diff, y = Result), data = df_wins) +
geom_bar(stat = 'identity', width = .75) +
labs( title = 'PPG_differential to Wins') +
ylab('Wins') +
xlab('PPG_Differential')
###osses
g2 <-ggplot(aes(x = PPG_Diff, y = Result + 1), data = df_losses) +
geom_bar(stat = 'identity', width = .75) +
labs( title = 'PPG_differential to Losses') +
ylab('Losses') +
xlab('PPG_Differential')
grid.arrange(g1, g2, nrow = 2)
ggplot(aes(x = PPG_Diff, y = Result), data = df_wins) +
geom_bar(stat = 'identity', width = .75) +
labs( title = 'PPG_differential to Wins') +
ylab('Wins') +
xlab('PPG_Differential') +
Scale_x_continuous(c(-35, 35, 5))
ggplot(aes(x = PPG_Diff, y = Result), data = df_wins) +
geom_bar(stat = 'identity', width = .75) +
labs( title = 'PPG_differential to Wins') +
ylab('Wins') +
xlab('PPG_Differential') +
xlim(-35, 35)
###WINS
g1 <-ggplot(aes(x = PPG_Diff, y = Result), data = df_wins) +
geom_bar(stat = 'identity', width = .75) +
labs( title = 'PPG_differential to Wins') +
ylab('Wins') +
xlab('PPG_Differential') +
xlim(-35, 35)
###osses
g2 <-ggplot(aes(x = PPG_Diff, y = Result + 1), data = df_losses) +
geom_bar(stat = 'identity', width = .75) +
labs( title = 'PPG_differential to Losses') +
ylab('Losses') +
xlab('PPG_Differential') +
xlim(-35, 35)
grid.arrange(g1, g2, nrow = 2)
##Correlation Matrix
cor_matrix <- cor(df)
round(cor_matrix, 2)
cor_matrix <- cor(df)
View(df)
View(df)
df_num <- subset(df, select = -c(Coach) )
cor_matrix <- cor(df_num)
round(cor_matrix, 2)
cormat <- round(cor_matrix, 2)
library(reshape2)
melted_cormat <- melt(cormat)
View(melted_cormat)
View(cor_matrix)
View(melted_cormat)
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
coord_fixed()
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()+
scale_fill_gradient2(low = "blue", high = "red", mid = "grey",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
coord_fixed()
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
coord_fixed()
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()+
scale_fill_gradient2(low = "blue", high = "red",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
coord_fixed()
cor(df$PPG_Diff, df$Result)
#PPG
cor(df$PPG_Diff, df$Result)
#FGP
cor(df$FGP_Diff, df$Result)
#AST
cor(df$AST_Diff, df$Result)
#FGP3
cor(df$FGP3_Diff, df$Result)
#FTP
cor(df$FTP_Diff, df$Result)
#OR
cor(df$OR_Diff, df$Result)
#Dr
cor(df$DR_Diff, df$Result)
#Stl
cor(df$STL_Diff, df$Result)
#Blk
cor(df$BLK_Diff, df$Result)
print('PPG: ' + cor(df$PPG_Diff, df$Result))
#PPG
cat("PPG: ", cor(df$PPG_Diff, df$Result))
cat("PPG: ", cor(df$PPG_Diff, df$Result, "\n"))
cat("PPG: ", cor(df$PPG_Diff, df$Result))
cat("/n")
cat("\n")
install.packages('caTools')
library(caTools)
17194*.75
train <- df[1:12896,]
test <- df[12897:17194,]
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
model <- glm(Result ~.,family=binomial(link='logit'),data=train)
View(model)
summary(model)
train <- df_num[1:12896,]
test <- df_num[12897:17194,]
model <- glm(Result ~.,family=binomial(link='logit'),data=train)
summary(model)
anova(model, test="Chisq")
fitted.results <- predict(model,newdata=subset(test,select=c(2,3,4,5,6,7,8)),type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
library(pscl)
install.packages(pscl)
install.packages('pscl')
pR2(model)
library(pscl)
pR2(model)
fitted.results <- predict(model,newdata=subset(test,select=c(2,3,4,5,6,7,8)),type='response')
View(test)
fitted.results <- predict(model,newdata=subset(test,select=c(2,3,4,5,6,7,8)),type='response')
model <- glm(Result ~.,family=binomial(link='logit'),data=train)
fitted.results <- predict(model,newdata=subset(test,select=c(2,3,4,5,6,7,8)),type='response')
View(df_num)
fitted.results <- predict(model,newdata=subset(test,select=c(1,2,3,4,5,6,7,8,9,10,11,12)),type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
fitted.results <- predict(model,newdata=subset(test,select=c(1,2,3,4,5,6,7,8,9,10,11,12)),type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$Result)
print(paste('Accuracy',1-misClasificError))
